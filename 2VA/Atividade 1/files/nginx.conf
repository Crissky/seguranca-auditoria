user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        ##
        # Virtual Host Configs
        ##

        ##### START MY CONFIGS #####

        ## Hide Nginx version ##
        server_tokens   off;

        ## Start: Size Limits & Buffer Overflows ##
        client_body_buffer_size  1K;    # (default is 8k or 16k)
        client_header_buffer_size 1k;
        
        # If size is greater the given one, then the client gets the error “Request Entity Too Large” (413).
        client_max_body_size 1k;
        
        # default the size of one buffer is equal to the size of page, depending on platform this either 4K or 8K
        # This will also help combat bad bots and DoS attacks.
        large_client_header_buffers 2 1k; 
        
        ## End: Size Limits & Buffer Overflows ##

        
        ## Start: Timeouts ##
        # O tempo limite é definido apenas se o body (client_body_timeout) um header (client_header_timeout) não for obtido em uma etapa de leitura.

        #If after this time the client send nothing, nginx returns error “Request time out” (408).
        client_body_timeout   10; # (default is 60).
        
        # If after this time the client send nothing, nginx returns error “Request time out” (408).
        client_header_timeout 10;
        
        # O servidor fechará as conexões após esse período (primero parâmetro).
        # Atribui o valor de tempo no cabeçalho Keep-Alive: timeout=time of the response (segundo Parâmentro).
        # Este cabeçalho pode convencer alguns navegadores a fechar a conexão, para que o servidor não precise fazer isso.
        keepalive_timeout     5 5;

        # Atribui o tempo limite de resposta ao cliente entre duas operações de leitura.
        # O NGINX encerra a conexão, se após este tempo o cliente não "pedir" nada.
        send_timeout          10;

        ## End: Timeouts ##

        
        ## Start: Control Simultaneous Connections
        
        # Define a zona de memória compartilhada e o número máximo permitido de conexões para um determinado valor de chave
        limit_conn_zone $binary_remote_addr zone=addr:5m;

        #Limita o número de conexões ao servidor por IP de cliente
        #e, ao mesmo tempo, o número total de conexões ao servidor virtual.
        limit_conn_zone $binary_remote_addr zone=perip:5m;
        limit_conn_zone $server_name zone=perserver:5m;

        ## End: Control Simultaneous Connections
        
        server {
                location /download/ {
                    limit_conn addr 1;
                }
                limit_conn perip 10;
                limit_conn perserver 100;
                
                # Apenas solicitações ao nosso Host são permitidas.
                # É permitido apenas domínio virtual configurado ou solicitações de proxy reverso.
                if ($host !~ ^(meu-site.in|www.meu-site.in|images.meu-site.in)$ ) {
                        return 444;
                }

                # Permitir apenas esses métodos de solicitação: (GET, HEAD e POST)
                if ($request_method !~ ^(GET|HEAD|POST)$ ) {
                        return 444;
                }

                # Block download agents
                if ($http_user_agent ~* LWP::Simple|BBBike|wget) {
                        return 403;
                }
                
                # Block some robots
                if ($http_user_agent ~* msnbot|scrapbot) {
                        return 403;
                }

                # Deny certain Referers
                # Block Referer spam (spam de referência)
                if ( $http_referer ~* (babes|forsale|girl|jewelry|love|nudit|organic|poker|porn|sex|teen|tft) )
                {
                        # return 404;
                        return 403;
                }

                # Stop deep linking or hot linking (uso de imagens em sites de terceiros)
                location /images/ {
                        valid_referers none blocked www.meu-site.in meu-site.in;
                        if ($invalid_referer) {
                                return   403;
                        }
                }
        }

        # Avoid clickjacking
        add_header X-Frame-Options SAMEORIGIN;
        # Disable content-type sniffing on some browsers
        add_header X-Content-Type-Options nosniff;
        # Enable the Cross-site scripting (XSS) filter
        add_header X-XSS-Protection "1; mode=block";

        ##### END MY CONFIGS #####

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
        
        
}

#mail {
#       # See sample authentication script at:
#       # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#       # auth_http localhost/auth.php;
#       # pop3_capabilities "TOP" "USER";
#       # imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#       server {
#               listen     localhost:110;
#               protocol   pop3;
#               proxy      on;
#       }
#
#       server {
#               listen     localhost:143;
#               protocol   imap;
#               proxy      on;
#       }
#}
